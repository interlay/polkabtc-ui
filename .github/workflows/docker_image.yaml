---
name: Build docker image

permissions:
  contents: read

on:
  push:
    branches:
      - master
      - prod
      - dev
      - beta
    tags: '*'

jobs:
  build_ui:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Install System Dependencies
        run: 'sudo apt-get update && sudo apt-get install -y libpq-dev'

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install -g yarn

      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        id: extract_branch

      # extract branch name on pull request
      - name: Print branch name
        if: github.event_name == 'pull_request'
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

      - run: "ln -s .env.${BRANCH_NAME:dev} .env"
      - run: yarn install
      - run: yarn lint
      - run: yarn test
      - run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: build-ui
          path: build/

  build_docker:
    runs-on: [self-hosted, linux]
    needs: [build_ui]
    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          TS=$(date +%s)
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=ts::${TS}
      - name: Setup docker context for buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders
      - name: Login to GitLab
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

      - uses: actions/download-artifact@v2
        id: download
        with:
          name: build-ui
          path: ./build/

      - name: Display structure of downloaded files
        run: ls -R ${{steps.download.outputs.download-path}}


      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: registry.gitlab.com/interlay/polkabtc-ui
          tags: |
            type=sha,prefix={{branch}}-,suffix=-${{ steps.prep.outputs.ts }}
            type=ref,event=branch
            type=ref,event=tag
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./DockerfileProd
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
